<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaIuEAGiLhABoi4QUaIuEOGiLhGRoi
        4SYaIuEzGiLhNhoi4QkaIuEAGiLhCRoi4UcaIuFdGSHhXRkh4VwaIuFZGiLhVBoi4UsaIuE/GiLhMhoi
        4SQaIuEXGiLhCxoi4QMaIuEAGiLhAAAAAAAAAAAAAAAAABoi4QAaIuEAGiLhMxoi4XYYIOGVFh7hsRYe
        4MgVHuDZFx/h5hoi4fAaIuHUGiLhHhoi4QAaIuFYGiLh9Bsj4f4eJuL+HSXh/hwk4f0bI+H8GiLh+Rgg
        4fUXH+HuGSHh5Boi4dYaIuHFGiLhhBoi4QgaIuEAAAAAAAAAAAAAAAAAGiLhABoi4QUaIuGuHCTh/y82
        5P9CSOb/VVvp/2pv6/9pbuv/Iyri/xkh4aoaIuEEGiLhDxkh4b0gKOL/jJDw/7q89v+2uPX/srX1/62w
        9P+lqPP/m57y/4mN8P86QeX/GSHh/xoi4eoaIuFeGiLhARoi4QAAAAAAAAAAAAAAAAAaIuEAGiLhCxcg
        4cI4P+X/zc/4/+7u/f/3+P7//////7q99v8gKOL+GSHhZRoi4QAaIuFXFx/h+GFm6v/09P7/////////
        ///////////////////8/P//oaTz/ygw4/8ZIeHfGiLhThoi4QEaIuEAAAAAAAAAAAAAAAAAAAAAABoi
        4QAaIuERFh7hzkpQ5//y8v3/////////////////g4jv/xcf4eYaIuEpGiLhDRgg4bwsM+P/yMr4////
        ////////////////////////+vr+/5mc8v8kLOL/GCDh0xoi4T8aIuEAGiLhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGiLhABoi4RkWHuDZWF3p//j4/v////////////T0/v9QV+j/Fh7gtRoi4QUaIuFZGCDh+H+D
        7v/9/f////////////////////////j5/v+SlvH/Iiri/xgg4cQaIuEwGiLhABoi4QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAaIuEAGiLhIRYe4OJma+v//f3/////////////19j6/y015P8XH+F0GiLhDhcf
        4b87QuX/3d77///////////////////////29v7/io7w/yAo4v4YIOGyGiLhIxoi4QAaIuEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABoi4QAaIuEqFh7g6XV67f////////////////+rrvT/HCTh8Bkh
        4TcZIeFcGyPh+Zmc8v//////////////////////8/P9/4CF7v8eJuL6GCDhnBoi4RcaIuEAGiLhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGiLhABoi4TQWHuHwhIjv/////////////////3l+
        7v8VHuDIGiLhJhYe4cRNVOj/6+z8/////////////////+7v/f91eu3/HCTh9Bgg4YMbI+ENGiLhAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaIuEAGiLhPxcf4fWSlvH/////////
        ///z9P3/TlTo/xQd4I8YIOFlIiri+7K19f/////////////////o6fz/aW7r/xoi4eoZIeFpGyPhBhoi
        4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoi4QAaIuFJGSHh+Z+j
        8v///////////9rc+v8xOOT5Fx/haxYe4MZnbOv/9/f+////////////3+D7/1xi6v8YIOHYGSHhSx8n
        4gEaIuEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGiLhABoi
        4VQbI+H8rK/0////////////trn2/xwk4fgUHODIMDfk+c7Q+f///////////9DS+f9LUef/FR3g+RYe
        4J0VHeBcFh7gVBcf4UkYIOE9GSHhMhoi4SIaIuEFGiLhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAaIuEAGSHhXx4m4f63uvb////////////U1fn/lJfx/4qO8P+ws/X//f3////////w8f3/horv/1FX
        6P9KUOf/QUfm/jg/5f4wN+T8KTDj+SMr4vQeJuLuGSHh4Rkh4XsbI+EKGiLhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABoi4QAZIeFqISni/8HE9/////////////////////////////////////////////39
        ///5+f7/9/f+//Ly/f/s7Pz/5eX8/9zd+v/R0/n/xcf3/7i69v99gu7/ISni+Bgg4YUbI+EIGiLhAAAA
        AAAAAAAAAAAAAAAAAAAaIuEAGiLhABkh4XQlLOL/ysz4////////////////////////////////////
        //////////////////////////////////////////////////////////////n5/v+KjvD/Hibi9xkh
        4XEaIuEBGiLhAAAAAAAAAAAAAAAAABoi4QAaIuEAGCDhfSkw4//S1Pn////////////6+v7/urz2/6+y
        9f+9wPb/ysz4/9fY+v/j5Pv/7e39//b3/v////////////////////////////////////////////Dx
        /f9PVuj/Fh7hzxoi4RMaIuEAAAAAAAAAAAAAAAAAGiLhABoi4QAYIOGHLTXk/9nb+v///////////+3u
        /f9DSeb/GSHh9SAo4u0mLeP0LTTj+jY95f5AR+b/cHXs//P0/f//////////////////////////////
        ////////7+/9/0dO5/8WHuCzGiLhBxoi4QAAAAAAAAAAAAAAAAAaIuEAGiLhABcf4Y8yOeT/3+D7////
        ////////4uP7/zU85f8XH+GUGCDhLRcf4T0WHuBMFR3gYBQc4Mg+Reb/7O39////////////////////
        ///////////////////O0Pn/KDDj/xgg4XwaIuEAGiLhAAAAAAAAAAAAAAAAABoi4QAaIuEAFx/hlzc+
        5f/l5vz////////////Y2vr/LTTk/xcf4WoaIuEAAAAAABoi4QAaIuEAFh7gnj9F5v/r7Pz/////////
        /////////////////////////////5yg8v8ZIeH0GiLhQxoi4QAAAAAAAAAAAAAAAAAAAAAAGiLhABoi
        4QAWH+GePEPl/+nq/P///////////9DR+f8nL+P9GCDhbxgg4SAYIOEpFx/hMBcf4TwVHeC5PkXm/+vs
        /P/////////////////////////////////6+v7/YWfq/xYe4NEaIuEWGiLhAAAAAAAAAAAAAAAAAAAA
        AAAaIuEAGiLhARYe4KRBSOb/7e79////////////ycv4/yYu4/8dJeHrHyfi5CEo4ugkK+LtKC/j9Cwz
        4/xaX+n/8PH9/////////////////////////////////9vc+v8yOeT/Fx/hlBoi4QAaIuEAAAAAAAAA
        AAAAAAAAAAAAABoi4QAaIuECFh7gqUdN5//w8f3////////////r7Pz/trj1/7S39f+4u/b/vsD3/8bI
        9//P0Pn/2dr6/+jp/P/9/v//////////////////////////////////oaTz/xsj4fcaIuFMGiLhABoi
        4QAAAAAAAAAAAAAAAAAAAAAAGiLhABoi4QMVHuCrS1Hn//Pz/f//////////////////////////////
        //////////////////////////////////////////////////////////////b2/v9aYOn/Fh7gzRoi
        4RUaIuEAAAAAAAAAAAAAAAAAAAAAAAAAAAAaIuEAGiLhAxgh4awqMuP/cHXs/5ea8f+4uvb/09X5/+jp
        /P/29v7//v7/////////////////////////////////////////////////////////////ycv4/ygw
        4/8YIOGBGiLhABoi4QAAAAAAAAAAAAAAAAAAAAAAAAAAABoi4QAaIuEAGiLhYhkh4cQWHuDgGCDh9B4m
        4v4qMeP/O0Ll/1JY6P9tcuz/iY3w/6Sn8/+8vvb/0NL5/+Hi+//t7v3/9vb+//z8//////////////7+
        //98gO7/Fx/h5xoi4TAaIuEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoi4QAaIuEBGiLhDBoi
        4SEaIuE/GSHhYxgg4YkXH+GtFh7gyhYe4OEXH+HxGiLh+x8n4v8oMOP/NDvk/0JJ5v9SWOj/ZGnr/3V6
        7f+Hi+//i4/w/zE45P8YIOGeGiLhBBoi4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAaIuEAGiLhABoi4QQaIuEQGiLhIhoi4TgaIuFTGSHhbhgg4YoXH+GjFh/huRYe
        4MsWHuDaFh7g5RYf4e4XIOH1GSHh5Boi4T0aIuEAGiLhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaIuEAGiLhABoi
        4QIaIuEHGiLhEBoi4RoaIuElGiLhMhoi4T4aIuEzGiLhBBoi4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////+AgAH8AIAA+AAAAPgBAAH4AAAH+AAAD/gAAB/4AAA/+AA
        Af/gAAP/4AAH/+AAAD/gAAAf4AAAD+AAAAfgAAAH4AAAB+AAAA/gHgAP4AAAD8AAAB/AAAAfwAAAH8AA
        AD/gAAA/4AAAP/+AAH///wB///////////8=
</value>
  </data>
</root>